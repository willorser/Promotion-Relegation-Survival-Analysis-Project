ggplot(aes(x = Time, y = Team)) +
geom_col(fill = "blue") +
labs(x = "Time (Seasons)", y = "Club", title = "The Blue Bloods of English Football")
#Clubs that only stayed in the EPL for one season
data %>%
filter(SpellNumber == 1, Time == 1) %>%
ggplot(aes(x = Time, y = Team, fill = NewlyPromoted)) +
geom_col() +
xlim(0, 20) +
labs(x = "Time (Seasons)", y = "Club", title = "The One-and-Dones")
#+
# theme(legend.position = "none")
#Light Blue are newly-promoted clubs and Dark Blue are not
#Chelsea's Squad Value over Time
master %>%
filter(Team == "Chelsea") %>%
ggplot(aes(x = Season, y = SquadValueMillions, group = 1)) +
geom_point() +
geom_line() +
labs(title = "Chelsea FC Squad Value Over Time", x = "Season", y = "Squad Value (Millions of USD)") +
theme(axis.text.x = element_text(angle = 25))
#Median Club Squad Value Over Time
master %>%
group_by(Season) %>%
mutate(MedianSquadValue = median(SquadValueMillions)) %>%
ggplot(aes(x = Season, y = MedianSquadValue, group = 1)) +
geom_point() +
geom_line() +
labs(title = "Median PL Squad Value Over Time", x = "Season", y = "Squad Value (Millions of USD)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 25))
#Create the Squad Value Rank Variable by Season
master %>%
group_by(Season) %>%
mutate(SquadValueRank = rank(-SquadValueMillions),
Relegated = as.numeric(X. == 18 | X. == 19 | X. == 20)) -> master2
#Linear model exploring correlation between Season Finish Position and Squad Value Rank
mod = lm(X. ~ SquadValueRank, data = master2)
#summary(mod)
#Linear model exploring correlation between Relegation Status and Squad Value Rank
mod2 = lm(Relegated ~ SquadValueRank, data = master2)
#summary(mod2)
#Now, look only at Newly-Promoted Clubs. Add corresponding SquadValue to each observation. Create a new variable called First Season Relegated (FirstSeasonRelegated = 1 means the club was relegated in their first EPL season, FirstSeasonRelegated = 0 means the club was not relegated in their first season) as an indicator of how the clubs do in their first season.
data %>%
filter(NewlyPromoted == 1) -> intermediate
intermediate[-c(6:25)] -> intermediate
intermediate %>%
mutate(Season = c("2000/01", "2005/06", "2007/08", "2019/20", "2000/01", "2012/13", "2010/11", "2017/18", "2003/04", "2014/15", "2016/17", "2005/06", "2012/13", "2007/08", "2000/01", "2002/03", "2001/02", "2001/02", "2018/19", "2001/02", "2002/03", "2007/08", "2009/10", "2002/03", "2004/05", "2008/09", "2010/11", "2003/04", "2003/04", "2009/10", "2018/19", "2004/05", "2013/14", "2004/05", "2011/12", "2015/16", "2019/20", "2005/06", "2006/07", "2012/13", "2006/07", "2019/20", "2006/07", "2015/16", "2008/09", "2008/09", "2013/14", "2016/17", "2009/10", "2014/15", "2016/17", "2010/11", "2011/12", "2011/12", "2014/15", "2013/14", "2018/19", "2015/16", "2017/18", "2017/18")) -> intermediate
NewlyPromotedSquadValues <- merge(intermediate, SquadValues, by = c("Team", "Season"))
names(NewlyPromotedSquadValues)[7] <- "FirstSeasonFinish"
NewlyPromotedSquadValues %>%
mutate(FirstSeasonRelegated = as.numeric(FirstSeasonFinish == 18 | FirstSeasonFinish == 19 | FirstSeasonFinish == 20)) -> NewlyPromotedSquadValues
NewlyPromotedSquadValuesMaster <- merge(NewlyPromotedSquadValues, master2, by = c("Team", "Season", "SquadValueMillions"))
NewlyPromotedSquadValuesMaster[-c(10:13)] -> NewlyPromotedSquadValuesMaster
#Use survival analysis methods to explore the relationship between SquadValueMillions and Time using Parametric models
#Exponential
m1 = survreg( Surv(Time, Status) ~ SquadValueMillions , dist = "exponential" , data = NewlyPromotedSquadValuesMaster )
#summary(m1)
#Weibull
m2 = survreg( Surv(Time, Status) ~ SquadValueMillions , dist = "weibull" , data = NewlyPromotedSquadValuesMaster )
#summary(m2)
#Normal
m3 = survreg( Surv(Time, Status) ~ SquadValueMillions , dist = "gaussian" , data = NewlyPromotedSquadValuesMaster )
#summary(m3)
#Log-normal
m4 = survreg( Surv(Time, Status) ~ SquadValueMillions , dist = "lognormal" , data = NewlyPromotedSquadValuesMaster )
#summary(m4)
#Exploring the relationship between SquadValueRank and Time using parametric models
#Exponential
m5 = survreg(Surv(Time, Status) ~ SquadValueRank, dist = "exponential", data = NewlyPromotedSquadValuesMaster)
#summary(m5)
#Weibull
m6 = survreg(Surv(Time, Status) ~ SquadValueRank, dist = "weibull", data = NewlyPromotedSquadValuesMaster)
#summary(m6)
#Normal
m7 = survreg(Surv(Time, Status) ~ SquadValueRank, dist = "gaussian", data = NewlyPromotedSquadValuesMaster)
#summary(m7)
#Log-Normal
m8 = survreg(Surv(Time, Status) ~ SquadValueRank, dist = "lognormal", data = NewlyPromotedSquadValuesMaster)
summary(m8)
#SquadValueRank in a newly-promoted club's first EPL season is non-significant as a predictor of EPL survival time
#Plot estimated survival curve from each parametric model as well as the non-parametric Kaplan-Meier survival curve. Assume the median *SquadValueMillions* value for each club, 70.9
#median(NewlyPromotedSquadValuesMaster$SquadValueMillions)
#Exponential
#curve(1 - pexp(x, 1/exp(1.270000777+0.001856079*70.9)), ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted EPL Clubs", from = 0, to = max(NewlyPromotedSquadValuesMaster$Time), ylim=c(0,1),  col = "purple")
#Weibull
#curve( 1 - pweibull( x , shape =  1/0.8960386, scale = exp(1.330894044+0.001244007*70.9)) , add=TRUE , col='blue' )
#Normal
#curve( 1 - pnorm( x , mean =  3.64814744+0.00151441*70.9, sd = 3.199531) , add=TRUE , col='red' )
#Log-Normal
#curve(1 - plnorm( x , meanlog =  0.9188513066+0.0005802076*70.9, sdlog = 0.9668346), add = TRUE, col = "green")
#Kaplan-Meier
KM = survfit(Surv(Time, Status) ~1, data = NewlyPromotedSquadValuesMaster)
#lines(KM, col = "black", conf.int = FALSE)
#Compare log-normal survival curves for clubs with differing *SquadValueMillions*: lowest squad value, median squad value, and highest squad value
curve(1 - plnorm( x , meanlog =  0.9188513066+0.0005802076*20.63, sdlog = 0.9668346), ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted EPL Clubs", from = 0, to = max(NewlyPromotedSquadValuesMaster$Time), ylim=c(0,1), col = "green")
curve(1 - plnorm( x , meanlog =  0.9188513066+0.0005802076*70.9, sdlog = 0.9668346), add = TRUE, col = "blue")
curve(1 - plnorm( x , meanlog =  0.9188513066+0.0005802076*263.45, sdlog = 0.9668346), add = TRUE, col = "red")
#Compare log-normal survival curves for clubs with differing *SquadValueMillions*: 25th quantile squad value, median squad value, and 75th quantile squad value
#quantile(NewlyPromotedSquadValuesMaster$SquadValueMillions)
curve(1 - plnorm( x , meanlog =  0.9188513066+0.0005802076*46.64, sdlog = 0.9668346), ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted EPL Clubs (Log-Normal)", from = 0, to = max(NewlyPromotedSquadValuesMaster$Time), ylim=c(0,1), col = "green")
curve(1 - plnorm( x , meanlog =  0.9188513066+0.0005802076*70.9, sdlog = 0.9668346), add = TRUE, col = "blue")
curve(1 - plnorm( x , meanlog =  0.9188513066+0.0005802076*117.43, sdlog = 0.9668346), add = TRUE, col = "red")
legend(x = 6, y = 1, legend = c(46.64, 70.9, 117.43), fill = c("green", "blue", "red"), title = "Squad Value (Millions of USD)")
##Compare log-normal survival curves for clubs with differing *SquadValueRank*: 5th, 10th, and 15th *SquadValueRank
curve(1 - plnorm( x , meanlog =  0.92363+0.00237*5, sdlog = 0.965), ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted PL Clubs (Log-Normal)", from = 0, to = max(NewlyPromotedSquadValuesMaster$Time), ylim=c(0,1), col = "green")
curve(1 - plnorm( x , meanlog =  0.92363+0.00237*10, sdlog = 0.965), add = TRUE, col = "blue")
curve(1 - plnorm( x , meanlog =  0.92363+0.00237*15, sdlog = 0.965), add = TRUE, col = "red")
legend(x = 7.5, y = 1, legend = c(5, 10, 15), fill = c("green", "blue", "red"), title = "SquadValueRank")
#Coxph model and estimated survival curve for *SquadValueMillions*
#quantile(NewlyPromotedSquadValues$SquadValueMillions)
#25th, 50th, and 75th percentiles for SquadValueMillions
new = data.frame(SquadValueMillions = c(46.64, 70.9, 117.43))
mod = coxph(Surv(Time, Status) ~SquadValueMillions, data = NewlyPromotedSquadValuesMaster)
plot(survfit(mod, newdata = new), conf.int = FALSE, col = c("green", "blue", "red"),  ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted EPL Clubs (Cox PH)", xlim = c(0, max(NewlyPromotedSquadValuesMaster$Time)), ylim=c(0,1))
legend(x = 6, y = 1, legend = c(46.64, 70.9, 117.43), fill = c("green", "blue", "red"), title = "Squad Value (Millions of USD)")
cox.zph(mod)
#Coxph model and estimated survival curve for *SquadValueRank*
new = data.frame(SquadValueRank = c(5, 10, 15))
mod = coxph(Surv(Time, Status) ~SquadValueRank, data = NewlyPromotedSquadValuesMaster)
plot(survfit(mod, newdata = new), conf.int = FALSE, col = c("green", "blue", "red"),  ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted PL Clubs (Cox PH)", xlim = c(0, max(NewlyPromotedSquadValuesMaster$Time)), ylim=c(0,1))
legend(x = 7.5, y = 1, legend = c(5, 10, 15), fill = c("green", "blue", "red"), title = "SquadValueRank")
#cox.zph(mod)
#Evaluate adequacy of each model using graphs of Cox-Snell residuals
CoxSnell = function(cs,status,xlim=NULL,ylim=NULL)
{
kmcs = survfit( Surv(jitter(cs,amount=(max(cs)-min(cs))/1000),status) ~ 1 )$surv
plot( log(-log(kmcs)) ~ sort(log(cs)) ,
xlab="log(Cox-Snell)", ylab="log(-log(S(Cox-Snell)))", xlim=xlim, ylim=ylim )
abline(0,1,col='red')
}
#Exponential
CS = -log( 1 - pexp( NewlyPromotedSquadValuesMaster$Time , 1/exp(1.270000777+0.001856079*NewlyPromotedSquadValuesMaster$SquadValueMillions) ) )
CoxSnell( CS , NewlyPromotedSquadValuesMaster$Status, xlim = c(-2, 2), ylim = c(-4, 4))
#Weibull
CS = -log( 1 - pweibull( NewlyPromotedSquadValuesMaster$Time , shape =  1/0.8960386, scale = exp(1.330894044+0.001244007*NewlyPromotedSquadValuesMaster$SquadValueMillions)) )
CoxSnell( CS , NewlyPromotedSquadValuesMaster$Status, xlim = c(-2, 2), ylim = c(-4, 4))
#Normal
CS = -log( 1 - pnorm( NewlyPromotedSquadValuesMaster$Time , mean =  3.64814744+0.00151441*NewlyPromotedSquadValuesMaster$SquadValueMillions, sd = 3.199531))
CoxSnell( CS , NewlyPromotedSquadValuesMaster$Status, xlim = c(-2, 2), ylim = c(-4, 4))
#Log-normal
CS = -log( 1 - plnorm( NewlyPromotedSquadValuesMaster$Time , meanlog =  0.9188513066+0.0005802076*NewlyPromotedSquadValuesMaster$SquadValueMillions, sdlog = 0.9668346))
CoxSnell( CS , NewlyPromotedSquadValuesMaster$Status, xlim = c(-2, 2), ylim = c(-4, 4))
#AIC Comparison of the parametric models
#Exponential
2*(2 - (-84.4))
#Weibull
2*(3 - (-84.1))
#Normal
2*(3 - (-97.8))
#Log-Normal
2*(3 - (-80.2))
#Explore the relationship between FirstSeasonRelegated with SquadValueRank and SquadValueMillions using linear models
m1 = lm(FirstSeasonRelegated ~ SquadValueRank, data = NewlyPromotedSquadValuesMaster)
#summary(m1)
m2 = lm(FirstSeasonRelegated ~ SquadValueMillions, data = NewlyPromotedSquadValuesMaster)
#summary(m2)
#Relationship between FirstSeasonFinish with SquadValueRank and SquadValueMillions using linear models
m3 = lm(FirstSeasonFinish ~ SquadValueRank, data = NewlyPromotedSquadValuesMaster)
#summary(m3)
m4 = lm(FirstSeasonFinish ~ SquadValueMillions, data = NewlyPromotedSquadValuesMaster)
#summary(m4)
NewlyPromotedClubs[-c(6:25)] -> clean
moneyman <- merge(intermediate, clean, by = c("Team", "Time", "Status", "SpellNumber", "NewlyPromoted"))
#Use survival analysis methods to explore the relationship between newly-promoted clubs' TMEFSmillions (Transfer Market Expenditure in First Season in Millions of USD) and Time using Parametric Methods
#Exponential
m1 = survreg( Surv(Time, Status) ~ TMEFSmillions , dist = "exponential" , data = moneyman )
#summary(m1)
#Weibull
m2 = survreg( Surv(Time, Status) ~ TMEFSmillions , dist = "weibull" , data = moneyman )
#summary(m2)
#Normal
m3 = survreg( Surv(Time, Status) ~ TMEFSmillions , dist = "gaussian" , data = moneyman )
#summary(m3)
#Log-normal
m4 = survreg( Surv(Time, Status) ~ TMEFSmillions , dist = "lognormal" , data = moneyman )
#summary(m4)
#Plot estimated survival curve from each parametric model as well as the non-parametric Kaplan-Meier survival curve. Assume the median *TMEFSmillions* value for each club, 24.345.
#median(moneyman$TMEFSmillions)
#Exponential
curve(1 - pexp(x, 1/exp(1.08245375+0.01374009*24.345)), ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted EPL Clubs", from = 0, to = max(moneyman$Time), ylim=c(0,1),  col = "purple")
#Weibull
curve( 1 - pweibull( x , shape =  1/0.960334, scale = exp(1.09955581+0.01347769*24.345)) , add=TRUE , col='blue', lty = 2 )
#Normal
curve( 1 - pnorm( x , mean =  3.18330768+0.03628583*24.345, sd = 4.101648) , add=TRUE , col='red' )
#Log-Normal
curve(1 - plnorm( x , meanlog =  0.749137982+0.008540924*24.345, sdlog = 1.021327), add = TRUE, col = "green")
#Kaplan-Meier
KM = survfit(Surv(Time, Status) ~1, data = moneyman)
lines(KM, col = "black", conf.int = FALSE)
#Compare the log-normal survival curves of clubs with varying values of *TMEFSmillions*: lowest transfer market expenditure, median transfer market expenditure, highest transfer market expenditure
curve(1 - plnorm( x , meanlog =  0.749137982+0.008540924*1.25, sdlog = 1.021327), ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted EPL Clubs", from = 0, to = max(moneyman$Time), ylim=c(0,1), col = "green")
curve(1 - plnorm( x , meanlog =  0.749137982+0.008540924*24.345, sdlog = 1.021327), add = TRUE, col = "blue")
curve(1 - plnorm( x , meanlog =  0.749137982+0.008540924*175.01, sdlog = 1.021327), add = TRUE, col = "red")
#Compare the log-normal survival curves of clubs with varying values of *TMEFSmillions*: 25th quantile transfer market expenditure, median transfer market expenditure, 75th quantile transfer market expenditure
#quantile(moneyman$TMEFSmillions)
curve(1 - plnorm( x , meanlog =  0.749137982+0.008540924*14.7025, sdlog = 1.021327), ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted PL Clubs (Log-Normal)", from = 0, to = max(moneyman$Time), ylim=c(0,1), col = "green")
curve(1 - plnorm( x , meanlog =  0.749137982+0.008540924*24.345, sdlog = 1.021327), add = TRUE, col = "blue")
curve(1 - plnorm( x , meanlog =  0.749137982+0.008540924*50.2200, sdlog = 1.021327), add = TRUE, col = "red")
legend(x = 12, y = 1, legend = c(14.70, 24.35, 50.22), fill = c("green", "blue", "red"), title = "STME (Millions of $)")
#Coxph model and estimated survival curve for *TMEFSmillions*
new = data.frame(TMEFSmillions = c(14.7025, 24.345, 50.2200))
mod = coxph(Surv(Time, Status) ~TMEFSmillions, data = moneyman)
plot(survfit(mod, newdata = new), conf.int = FALSE, col = c("green", "blue", "red"),  ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted PL Clubs (Cox PH)", xlim = c(0, max(moneyman$Time)), ylim=c(0,1))
legend(x = 12, y = 1, legend = c(14.70, 24.35, 50.22), fill = c("green", "blue", "red"), title = "STME (Millions of $)")
#cox.zph(mod)
View(master2)
master2 %>%
select("X.", "Team", "Season", "SquadValueRank")
#Create the Squad Value Rank Variable by Season
master %>%
group_by(Season) %>%
mutate(SquadValueRank = rank(-SquadValueMillions),
Relegated = as.numeric(X. == 18 | X. == 19 | X. == 20)) -> master2
#Linear model exploring correlation between Season Finish Position and Squad Value Rank
mod = lm(X. ~ SquadValueRank, data = master2)
#summary(mod)
#Linear model exploring correlation between Relegation Status and Squad Value Rank
mod2 = lm(Relegated ~ SquadValueRank, data = master2)
#summary(mod2)
master2 %>%
select("X.", "Team", "Season", "SquadValueRank") %>%
filter("Season" == "2014/15")
master2 %>%
select("X.", "Team", "Season", "SquadValueRank") %>%
filter("Season" == "2014/15") -> tabledemo
tabledemo
master2 %>%
select("X.", "Team", "Season", "SquadValueRank") %>%
filter("Season" == 2014/15) -> tabledemo
tabledemo
master2 %>%
select("X.", "Team", "Season", "SquadValueRank") %>%
filter(Season == 2014/15) -> tabledemo
tabledemo
master2 %>%
select("X.", "Team", "Season", "SquadValueRank")
master2 %>%
select("X.", "Team", "Season", "SquadValueRank") %>%
select(Season == 2014/15) -> tabledemo
master2 %>%
select("X.", "Team", "Season", "SquadValueRank") %>%
select(Season == 2014/15) -> tabledemo
master2 %>%
select("X.", "Team", "Season", "SquadValueRank")
master2 %>%
select("X.", "Team", "Season", "SquadValueRank") %>%
select("Season" == 2014/15) -> tabledemo
master2 %>%
select("X.", "Team", "Season", "SquadValueRank") %>%
select("Season" == 2014/15) -> tabledemo
master2 %>%
select("X.", "Team", "Season", "SquadValueRank")
master2 %>%
select("X.", "Team", "Season", "SquadValueRank") -> tabledemo
View(tabledemo)
master2 %>%
select("X.", "Team", "Season", "SquadValueRank") %>%
filter(Season == 2014/15) -> tabledemo
View(tabledemo)
master2 %>%
select("X.", "Team", "Season", "SquadValueRank") %>%
filter(Season == '2014/15') -> tabledemo
View(tabledemo)
master2 %>%
select("X.", "Team", "Season", "SquadValueRank") %>%
filter(Season == '2014/15') -> tabledemo
View(tabledemo)
#Plot estimated survival curve from each parametric model as well as the non-parametric Kaplan-Meier survival curve. Assume the median *SquadValueMillions* value for each club, 70.9
#median(NewlyPromotedSquadValuesMaster$SquadValueMillions)
#Exponential
#curve(1 - pexp(x, 1/exp(1.270000777+0.001856079*70.9)), ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted EPL Clubs", from = 0, to = max(NewlyPromotedSquadValuesMaster$Time), ylim=c(0,1),  col = "purple")
#Weibull
#curve( 1 - pweibull( x , shape =  1/0.8960386, scale = exp(1.330894044+0.001244007*70.9)) , add=TRUE , col='blue' )
#Normal
#curve( 1 - pnorm( x , mean =  3.64814744+0.00151441*70.9, sd = 3.199531) , add=TRUE , col='red' )
#Log-Normal
#curve(1 - plnorm( x , meanlog =  0.9188513066+0.0005802076*70.9, sdlog = 0.9668346), add = TRUE, col = "green")
#Kaplan-Meier
KM = survfit(Surv(Time, Status) ~1, data = NewlyPromotedSquadValuesMaster)
#lines(KM, col = "black", conf.int = FALSE)
KM
#Compare log-normal survival curves for clubs with differing *SquadValueMillions*: 25th quantile squad value, median squad value, and 75th quantile squad value
#quantile(NewlyPromotedSquadValuesMaster$SquadValueMillions)
curve(1 - plnorm( x , meanlog =  0.9188513066+0.0005802076*46.64, sdlog = 0.9668346), ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted PL Clubs (Log-Normal)", from = 0, to = max(NewlyPromotedSquadValuesMaster$Time), ylim=c(0,1), col = "green")
curve(1 - plnorm( x , meanlog =  0.9188513066+0.0005802076*70.9, sdlog = 0.9668346), add = TRUE, col = "blue")
curve(1 - plnorm( x , meanlog =  0.9188513066+0.0005802076*117.43, sdlog = 0.9668346), add = TRUE, col = "red")
legend(x = 6, y = 1, legend = c(46.64, 70.9, 117.43), fill = c("green", "blue", "red"), title = "Squad Value (Millions of USD)")
#Create the Squad Value Rank Variable by Season
master %>%
group_by(Season) %>%
mutate(SquadValueRank = rank(-SquadValueMillions),
Relegated = as.numeric(X. == 18 | X. == 19 | X. == 20)) -> master2
#Linear model exploring correlation between Season Finish Position and Squad Value Rank
mod = lm(X. ~ SquadValueRank, data = master2)
#summary(mod)
#Linear model exploring correlation between Relegation Status and Squad Value Rank
mod2 = lm(Relegated ~ SquadValueRank, data = master2)
#summary(mod2)
master2 %>%
select("X.", "Team", "Season", "SquadValueRank") %>%
filter(Season == '2014/15') -> tabledemo
#Coxph model and estimated survival curve for *SquadValueMillions*
#quantile(NewlyPromotedSquadValues$SquadValueMillions)
#25th, 50th, and 75th percentiles for SquadValueMillions
new = data.frame(SquadValueMillions = c(46.64, 70.9, 117.43))
mod = coxph(Surv(Time, Status) ~SquadValueMillions, data = NewlyPromotedSquadValuesMaster)
plot(survfit(mod, newdata = new), conf.int = FALSE, col = c("green", "blue", "red"),  ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted EPL Clubs (Cox PH)", xlim = c(0, max(NewlyPromotedSquadValuesMaster$Time)), ylim=c(0,1))
legend(x = 6, y = 1, legend = c(46.64, 70.9, 117.43), fill = c("green", "blue", "red"), title = "Squad Value (Millions of USD)")
#cox.zph(mod)
#Coxph model and estimated survival curve for *SquadValueMillions*
#quantile(NewlyPromotedSquadValues$SquadValueMillions)
#25th, 50th, and 75th percentiles for SquadValueMillions
new = data.frame(SquadValueMillions = c(46.64, 70.9, 117.43))
mod = coxph(Surv(Time, Status) ~SquadValueMillions, data = NewlyPromotedSquadValuesMaster)
plot(survfit(mod, newdata = new), conf.int = FALSE, col = c("green", "blue", "red"),  ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted PL Clubs (Cox PH)", xlim = c(0, max(NewlyPromotedSquadValuesMaster$Time)), ylim=c(0,1))
legend(x = 6, y = 1, legend = c(46.64, 70.9, 117.43), fill = c("green", "blue", "red"), title = "Squad Value (Millions of USD)")
#cox.zph(mod)
#Compare the log-normal survival curves of clubs with varying values of *TMEFSmillions*: 25th quantile transfer market expenditure, median transfer market expenditure, 75th quantile transfer market expenditure
#quantile(moneyman$TMEFSmillions)
curve(1 - plnorm( x , meanlog =  0.749137982+0.008540924*14.7025, sdlog = 1.021327), ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted PL Clubs (Log-Normal)", from = 0, to = max(moneyman$Time), ylim=c(0,1), col = "green")
curve(1 - plnorm( x , meanlog =  0.749137982+0.008540924*24.345, sdlog = 1.021327), add = TRUE, col = "blue")
curve(1 - plnorm( x , meanlog =  0.749137982+0.008540924*50.2200, sdlog = 1.021327), add = TRUE, col = "red")
legend(x = 12, y = 1, legend = c(14.70, 24.35, 50.22), fill = c("green", "blue", "red"), title = "STME (Millions of USD)")
#Coxph model and estimated survival curve for *TMEFSmillions*
new = data.frame(TMEFSmillions = c(14.7025, 24.345, 50.2200))
mod = coxph(Surv(Time, Status) ~TMEFSmillions, data = moneyman)
plot(survfit(mod, newdata = new), conf.int = FALSE, col = c("green", "blue", "red"),  ylab="Survival Probability", xlab="Time (Seasons)", main = "Survival of Newly-Promoted PL Clubs (Cox PH)", xlim = c(0, max(moneyman$Time)), ylim=c(0,1))
legend(x = 12, y = 1, legend = c(14.70, 24.35, 50.22), fill = c("green", "blue", "red"), title = "STME (Millions of USD)")
#cox.zph(mod)
mean(NewlyPromotedSquadValuesMaster$Time)
histogram(NewlyPromotedSquadValuesMaster$Time)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(survival)
#Read in data from Kaggle dataset
season0708 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20072008.csv")
season0708 <- season0708[-c(11:13)]
season0809 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20082009.csv")
season0910 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20092010.csv")
season1011 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20102011.csv")
season1112 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20112012.csv")
season1213 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20122013.csv")
season1314 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20132014.csv")
season1415 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20142015.csv")
season1516 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20152016.csv")
season1617 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20162017.csv")
#Add Season Name to each season
season0708 %>%
mutate(Season = "2007/08") -> season0708
season0809 %>%
mutate(Season = "2008/09") -> season0809
season0910 %>%
mutate(Season = "2009/10") -> season0910
season1011 %>%
mutate(Season = "2010/11") -> season1011
season1112 %>%
mutate(Season = "2011/12") -> season1112
season1213 %>%
mutate(Season = "2012/13") -> season1213
season1314 %>%
mutate(Season = "2013/14") -> season1314
season1415 %>%
mutate(Season = "2014/15") -> season1415
season1516 %>%
mutate(Season = "2015/16") -> season1516
season1617 %>%
mutate(Season = "2016/17") -> season1617
full <- rbind(season0708, season0809, season0910, season1011, season1112, season1213, season1314, season1415, season1516, season1617)
full <- full[-c(3, 4:10)]
#Manual creation of EPL Final Table dataframes
season0001 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Manchester United", "Arsenal", "Liverpool", "Leeds United", "Ipswich Town", "Chelsea", "Sunderland", "Aston Villa", "Charlton Athletic", "Southampton", "Newcastle United", "Tottenham Hotspur", "Leicester City", "Middlesbrough", "West Ham United", "Everton", "Derby County", "Manchester City", "Coventry City", "Bradford City"), Season = "2000/01")
season0102 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Arsenal", "Liverpool", "Manchester United", "Newcastle United", "Leeds United", "Chelsea", "West Ham United", "Aston Villa", "Tottenham Hotspur", "Blackburn Rovers", "Southampton", "Middlesbrough", "Fulham", "Charlton Athletic", "Everton", "Bolton Wanderers", "Sunderland", "Ipswich Town", "Derby County", "Leicester City"), Season = "2001/02")
season0203 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Manchester United", "Arsenal", "Newcastle United", "Chelsea", "Liverpool", "Blackburn Rovers", "Everton", "Southampton", "Manchester City", "Tottenham Hotspur", "Middlesbrough", "Charlton Athletic", "Birmingham City", "Fulham", "Leeds United", "Aston Villa", "Bolton Wanderers", "West Ham United", "West Bromwich Albion", "Sunderland"), Season = "2002/03")
season0304 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Arsenal", "Chelsea", "Manchester United", "Liverpool", "Newcastle United", "Aston Villa", "Charlton Athletic", "Bolton Wanderers", "Fulham", "Birmingham City", "Middlesbrough", "Southampton", "Portsmouth", "Tottenham Hotspur", "Blackburn Rovers", "Manchester City", "Everton", "Leicester City", "Leeds United", "Wolverhampton Wanderers"), Season = "2003/04")
season0405 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Chelsea", "Arsenal", "Manchester United", "Everton", "Liverpool", "Bolton Wanderers", "Middlesbrough", "Manchester City", "Tottenham Hotspur", "Aston Villa", "Charlton Athletic", "Birmingham City", "Fulham", "Newcastle United", "Blackburn Rovers", "Portsmouth", "West Bromwich Albion", "Crystal Palace", "Norwich City", "Southampton"), Season = "2004/05")
season0506 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Chelsea", "Manchester United", "Liverpool", "Arsenal", "Tottenham Hotspur", "Blackburn Rovers", "Newcastle United", "Bolton Wanderers", "West Ham United", "Wigan Athletic", "Everton", "Fulham", "Charlton Athletic", "Middlesbrough", "Manchester City", "Aston Villa", "Portsmouth", "Birmingham City", "West Bromwich Albion", "Sunderland"), Season = "2005/06")
season0607 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Manchester United", "Chelsea", "Liverpool", "Arsenal", "Tottenham Hotspur", "Everton", "Bolton Wanderers", "Reading", "Portsmouth", "Blackburn Rovers", "Aston Villa", "Middlesbrough", "Newcastle United", "Manchester City", "West Ham United", "Fulham", "Wigan Athletic", "Sheffield United", "Charlton Athletic", "Watford"), Season = "2006/07")
season1718 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Manchester City", "Manchester United", "Tottenham Hotspur", "Liverpool", "Chelsea", "Arsenal", "Burnley", "Everton", "Leicester City", "Newcastle United", "Crystal Palace", "AFC Bournemouth", "West Ham United", "Watford", "Brighton & Hove Albion", "Huddersfield Town", "Southampton", "Swansea City", "Stoke City", "West Bromwich Albion"), Season = "2017/18")
season1819 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Manchester City", "Liverpool", "Chelsea", "Tottenham Hotspur", "Arsenal", "Manchester United", "Wolverhampton Wanderers", "Everton", "Leicester City", "West Ham United", "Watford", "Crystal Palace", "Newcastle United", "AFC Bournemouth", "Burnley", "Southampton", "Brighton & Hove Albion", "Cardiff City", "Fulham", "Huddersfield Town"), Season = "2018/19")
season1920 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Liverpool", "Manchester City", "Manchester United", "Chelsea", "Leicester City", "Tottenham Hotspur", "Wolverhampton Wanderers", "Arsenal", "Sheffield United", "Burnley", "Southampton", "Everton", "Newcastle United", "Crystal Palace", "Brighton & Hove Albion", "West Ham United", "Aston Villa", "AFC Bournemouth", "Watford", "Norwich City"), Season = "2019/20")
fuller <- rbind(season0001, season0102, season0203, season0304, season0405, season0506, season0607, full, season1718, season1819, season1920)
#Create SeasonFinish dataframe. Send to Victor
fuller %>%
pivot_wider(id_cols = Team, names_from = Season, values_from = X.) -> SeasonFinish
save(SeasonFinish, file = "SeasonFinish2.RData")
#Manual Creation of the variable for "Transfer Market Expenditure in First EPL Season"
data %>%
filter(NewlyPromoted == 1) -> NewlyPromotedClubs
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(survival)
#Read in data from Kaggle dataset
season0708 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20072008.csv")
season0708 <- season0708[-c(11:13)]
season0809 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20082009.csv")
season0910 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20092010.csv")
season1011 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20102011.csv")
season1112 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20112012.csv")
season1213 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20122013.csv")
season1314 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20132014.csv")
season1415 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20142015.csv")
season1516 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20152016.csv")
season1617 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20162017.csv")
#Add Season Name to each season
season0708 %>%
mutate(Season = "2007/08") -> season0708
season0809 %>%
mutate(Season = "2008/09") -> season0809
season0910 %>%
mutate(Season = "2009/10") -> season0910
season1011 %>%
mutate(Season = "2010/11") -> season1011
season1112 %>%
mutate(Season = "2011/12") -> season1112
season1213 %>%
mutate(Season = "2012/13") -> season1213
season1314 %>%
mutate(Season = "2013/14") -> season1314
season1415 %>%
mutate(Season = "2014/15") -> season1415
season1516 %>%
mutate(Season = "2015/16") -> season1516
season1617 %>%
mutate(Season = "2016/17") -> season1617
full <- rbind(season0708, season0809, season0910, season1011, season1112, season1213, season1314, season1415, season1516, season1617)
full <- full[-c(3, 4:10)]
#Manual creation of EPL Final Table dataframes
season0001 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Manchester United", "Arsenal", "Liverpool", "Leeds United", "Ipswich Town", "Chelsea", "Sunderland", "Aston Villa", "Charlton Athletic", "Southampton", "Newcastle United", "Tottenham Hotspur", "Leicester City", "Middlesbrough", "West Ham United", "Everton", "Derby County", "Manchester City", "Coventry City", "Bradford City"), Season = "2000/01")
season0102 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Arsenal", "Liverpool", "Manchester United", "Newcastle United", "Leeds United", "Chelsea", "West Ham United", "Aston Villa", "Tottenham Hotspur", "Blackburn Rovers", "Southampton", "Middlesbrough", "Fulham", "Charlton Athletic", "Everton", "Bolton Wanderers", "Sunderland", "Ipswich Town", "Derby County", "Leicester City"), Season = "2001/02")
season0203 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Manchester United", "Arsenal", "Newcastle United", "Chelsea", "Liverpool", "Blackburn Rovers", "Everton", "Southampton", "Manchester City", "Tottenham Hotspur", "Middlesbrough", "Charlton Athletic", "Birmingham City", "Fulham", "Leeds United", "Aston Villa", "Bolton Wanderers", "West Ham United", "West Bromwich Albion", "Sunderland"), Season = "2002/03")
season0304 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Arsenal", "Chelsea", "Manchester United", "Liverpool", "Newcastle United", "Aston Villa", "Charlton Athletic", "Bolton Wanderers", "Fulham", "Birmingham City", "Middlesbrough", "Southampton", "Portsmouth", "Tottenham Hotspur", "Blackburn Rovers", "Manchester City", "Everton", "Leicester City", "Leeds United", "Wolverhampton Wanderers"), Season = "2003/04")
season0405 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Chelsea", "Arsenal", "Manchester United", "Everton", "Liverpool", "Bolton Wanderers", "Middlesbrough", "Manchester City", "Tottenham Hotspur", "Aston Villa", "Charlton Athletic", "Birmingham City", "Fulham", "Newcastle United", "Blackburn Rovers", "Portsmouth", "West Bromwich Albion", "Crystal Palace", "Norwich City", "Southampton"), Season = "2004/05")
season0506 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Chelsea", "Manchester United", "Liverpool", "Arsenal", "Tottenham Hotspur", "Blackburn Rovers", "Newcastle United", "Bolton Wanderers", "West Ham United", "Wigan Athletic", "Everton", "Fulham", "Charlton Athletic", "Middlesbrough", "Manchester City", "Aston Villa", "Portsmouth", "Birmingham City", "West Bromwich Albion", "Sunderland"), Season = "2005/06")
season0607 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Manchester United", "Chelsea", "Liverpool", "Arsenal", "Tottenham Hotspur", "Everton", "Bolton Wanderers", "Reading", "Portsmouth", "Blackburn Rovers", "Aston Villa", "Middlesbrough", "Newcastle United", "Manchester City", "West Ham United", "Fulham", "Wigan Athletic", "Sheffield United", "Charlton Athletic", "Watford"), Season = "2006/07")
season1718 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Manchester City", "Manchester United", "Tottenham Hotspur", "Liverpool", "Chelsea", "Arsenal", "Burnley", "Everton", "Leicester City", "Newcastle United", "Crystal Palace", "AFC Bournemouth", "West Ham United", "Watford", "Brighton & Hove Albion", "Huddersfield Town", "Southampton", "Swansea City", "Stoke City", "West Bromwich Albion"), Season = "2017/18")
season1819 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Manchester City", "Liverpool", "Chelsea", "Tottenham Hotspur", "Arsenal", "Manchester United", "Wolverhampton Wanderers", "Everton", "Leicester City", "West Ham United", "Watford", "Crystal Palace", "Newcastle United", "AFC Bournemouth", "Burnley", "Southampton", "Brighton & Hove Albion", "Cardiff City", "Fulham", "Huddersfield Town"), Season = "2018/19")
season1920 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Liverpool", "Manchester City", "Manchester United", "Chelsea", "Leicester City", "Tottenham Hotspur", "Wolverhampton Wanderers", "Arsenal", "Sheffield United", "Burnley", "Southampton", "Everton", "Newcastle United", "Crystal Palace", "Brighton & Hove Albion", "West Ham United", "Aston Villa", "AFC Bournemouth", "Watford", "Norwich City"), Season = "2019/20")
fuller <- rbind(season0001, season0102, season0203, season0304, season0405, season0506, season0607, full, season1718, season1819, season1920)
#Create SeasonFinish dataframe. Send to Victor
fuller %>%
pivot_wider(id_cols = Team, names_from = Season, values_from = X.) -> SeasonFinish
save(SeasonFinish, file = "SeasonFinish2.RData")
#Manual Creation of the variable for "Transfer Market Expenditure in First EPL Season"
data %>%
filter(NewlyPromoted == 1) -> NewlyPromotedClubs
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(survival)
#Read in data from Kaggle dataset
season0708 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20072008.csv")
season0708 <- season0708[-c(11:13)]
season0809 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20082009.csv")
season0910 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20092010.csv")
season1011 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20102011.csv")
season1112 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20112012.csv")
season1213 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20122013.csv")
season1314 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20132014.csv")
season1415 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20142015.csv")
season1516 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20152016.csv")
season1617 <- read.csv("~/Desktop/Survival Analysis/Final Project/epl20162017.csv")
#Add Season Name to each season
season0708 %>%
mutate(Season = "2007/08") -> season0708
season0809 %>%
mutate(Season = "2008/09") -> season0809
season0910 %>%
mutate(Season = "2009/10") -> season0910
season1011 %>%
mutate(Season = "2010/11") -> season1011
season1112 %>%
mutate(Season = "2011/12") -> season1112
season1213 %>%
mutate(Season = "2012/13") -> season1213
season1314 %>%
mutate(Season = "2013/14") -> season1314
season1415 %>%
mutate(Season = "2014/15") -> season1415
season1516 %>%
mutate(Season = "2015/16") -> season1516
season1617 %>%
mutate(Season = "2016/17") -> season1617
full <- rbind(season0708, season0809, season0910, season1011, season1112, season1213, season1314, season1415, season1516, season1617)
full <- full[-c(3, 4:10)]
#Manual creation of EPL Final Table dataframes
season0001 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Manchester United", "Arsenal", "Liverpool", "Leeds United", "Ipswich Town", "Chelsea", "Sunderland", "Aston Villa", "Charlton Athletic", "Southampton", "Newcastle United", "Tottenham Hotspur", "Leicester City", "Middlesbrough", "West Ham United", "Everton", "Derby County", "Manchester City", "Coventry City", "Bradford City"), Season = "2000/01")
season0102 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Arsenal", "Liverpool", "Manchester United", "Newcastle United", "Leeds United", "Chelsea", "West Ham United", "Aston Villa", "Tottenham Hotspur", "Blackburn Rovers", "Southampton", "Middlesbrough", "Fulham", "Charlton Athletic", "Everton", "Bolton Wanderers", "Sunderland", "Ipswich Town", "Derby County", "Leicester City"), Season = "2001/02")
season0203 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Manchester United", "Arsenal", "Newcastle United", "Chelsea", "Liverpool", "Blackburn Rovers", "Everton", "Southampton", "Manchester City", "Tottenham Hotspur", "Middlesbrough", "Charlton Athletic", "Birmingham City", "Fulham", "Leeds United", "Aston Villa", "Bolton Wanderers", "West Ham United", "West Bromwich Albion", "Sunderland"), Season = "2002/03")
season0304 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Arsenal", "Chelsea", "Manchester United", "Liverpool", "Newcastle United", "Aston Villa", "Charlton Athletic", "Bolton Wanderers", "Fulham", "Birmingham City", "Middlesbrough", "Southampton", "Portsmouth", "Tottenham Hotspur", "Blackburn Rovers", "Manchester City", "Everton", "Leicester City", "Leeds United", "Wolverhampton Wanderers"), Season = "2003/04")
season0405 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Chelsea", "Arsenal", "Manchester United", "Everton", "Liverpool", "Bolton Wanderers", "Middlesbrough", "Manchester City", "Tottenham Hotspur", "Aston Villa", "Charlton Athletic", "Birmingham City", "Fulham", "Newcastle United", "Blackburn Rovers", "Portsmouth", "West Bromwich Albion", "Crystal Palace", "Norwich City", "Southampton"), Season = "2004/05")
season0506 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Chelsea", "Manchester United", "Liverpool", "Arsenal", "Tottenham Hotspur", "Blackburn Rovers", "Newcastle United", "Bolton Wanderers", "West Ham United", "Wigan Athletic", "Everton", "Fulham", "Charlton Athletic", "Middlesbrough", "Manchester City", "Aston Villa", "Portsmouth", "Birmingham City", "West Bromwich Albion", "Sunderland"), Season = "2005/06")
season0607 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Manchester United", "Chelsea", "Liverpool", "Arsenal", "Tottenham Hotspur", "Everton", "Bolton Wanderers", "Reading", "Portsmouth", "Blackburn Rovers", "Aston Villa", "Middlesbrough", "Newcastle United", "Manchester City", "West Ham United", "Fulham", "Wigan Athletic", "Sheffield United", "Charlton Athletic", "Watford"), Season = "2006/07")
season1718 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Manchester City", "Manchester United", "Tottenham Hotspur", "Liverpool", "Chelsea", "Arsenal", "Burnley", "Everton", "Leicester City", "Newcastle United", "Crystal Palace", "AFC Bournemouth", "West Ham United", "Watford", "Brighton & Hove Albion", "Huddersfield Town", "Southampton", "Swansea City", "Stoke City", "West Bromwich Albion"), Season = "2017/18")
season1819 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Manchester City", "Liverpool", "Chelsea", "Tottenham Hotspur", "Arsenal", "Manchester United", "Wolverhampton Wanderers", "Everton", "Leicester City", "West Ham United", "Watford", "Crystal Palace", "Newcastle United", "AFC Bournemouth", "Burnley", "Southampton", "Brighton & Hove Albion", "Cardiff City", "Fulham", "Huddersfield Town"), Season = "2018/19")
season1920 = data.frame(X. = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), Team = c("Liverpool", "Manchester City", "Manchester United", "Chelsea", "Leicester City", "Tottenham Hotspur", "Wolverhampton Wanderers", "Arsenal", "Sheffield United", "Burnley", "Southampton", "Everton", "Newcastle United", "Crystal Palace", "Brighton & Hove Albion", "West Ham United", "Aston Villa", "AFC Bournemouth", "Watford", "Norwich City"), Season = "2019/20")
fuller <- rbind(season0001, season0102, season0203, season0304, season0405, season0506, season0607, full, season1718, season1819, season1920)
#Create SeasonFinish dataframe. Send to Victor
fuller %>%
pivot_wider(id_cols = Team, names_from = Season, values_from = X.) -> SeasonFinish
save(SeasonFinish, file = "SeasonFinish2.RData")
#Manual Creation of the variable for "Transfer Market Expenditure in First EPL Season"
data %>%
filter(NewlyPromoted == 1) -> NewlyPromotedClubs
View(fuller)
load("/Users/Will/Desktop/Survival Analysis/Final Project/NewlyPromotedClubsMaster.RData")
View(NewlyPromotedSquadValuesMaster5)
